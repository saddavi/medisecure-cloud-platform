#!/bin/bash

# MediSecure - Complete CORS Fix Script
# Properly sets up CORS with correct order: method response -> integration response

echo "üîß MediSecure - Complete CORS Fix"
echo "================================="

REGION="ap-south-1"
API_ID="e8x7hxtrul"

# Resource IDs from our existing API
REGISTER_RESOURCE_ID="9sqbo8"
LOGIN_RESOURCE_ID="78ogsi"

echo "üåê Properly configuring CORS with correct order..."
echo "üîó API ID: $API_ID"
echo ""

# ============= Fix /auth/register CORS =============
echo "üîß Setting up complete CORS for /auth/register..."

# 1. First set up method response (required before integration response)
aws apigateway put-method-response \
    --rest-api-id $API_ID \
    --resource-id $REGISTER_RESOURCE_ID \
    --http-method OPTIONS \
    --status-code 200 \
    --response-parameters '{
        "method.response.header.Access-Control-Allow-Headers": false,
        "method.response.header.Access-Control-Allow-Methods": false,
        "method.response.header.Access-Control-Allow-Origin": false
    }' \
    --region $REGION

# 2. Now set up integration response
aws apigateway put-integration-response \
    --rest-api-id $API_ID \
    --resource-id $REGISTER_RESOURCE_ID \
    --http-method OPTIONS \
    --status-code 200 \
    --response-parameters '{
        "method.response.header.Access-Control-Allow-Headers": "'"'"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"'"'",
        "method.response.header.Access-Control-Allow-Methods": "'"'"'POST,OPTIONS'"'"'",
        "method.response.header.Access-Control-Allow-Origin": "'"'"'*'"'"'"
    }' \
    --region $REGION

echo "‚úÖ /auth/register CORS configured"

# ============= Fix /auth/login CORS =============
echo "üîß Setting up complete CORS for /auth/login..."

# 1. First set up method response
aws apigateway put-method-response \
    --rest-api-id $API_ID \
    --resource-id $LOGIN_RESOURCE_ID \
    --http-method OPTIONS \
    --status-code 200 \
    --response-parameters '{
        "method.response.header.Access-Control-Allow-Headers": false,
        "method.response.header.Access-Control-Allow-Methods": false,
        "method.response.header.Access-Control-Allow-Origin": false
    }' \
    --region $REGION

# 2. Now set up integration response
aws apigateway put-integration-response \
    --rest-api-id $API_ID \
    --resource-id $LOGIN_RESOURCE_ID \
    --http-method OPTIONS \
    --status-code 200 \
    --response-parameters '{
        "method.response.header.Access-Control-Allow-Headers": "'"'"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"'"'",
        "method.response.header.Access-Control-Allow-Methods": "'"'"'POST,OPTIONS'"'"'",
        "method.response.header.Access-Control-Allow-Origin": "'"'"'*'"'"'"
    }' \
    --region $REGION

echo "‚úÖ /auth/login CORS configured"

# ============= Also add CORS headers to POST methods =============
echo "üîß Adding CORS headers to POST methods..."

# Add CORS headers to POST /auth/register
aws apigateway put-method-response \
    --rest-api-id $API_ID \
    --resource-id $REGISTER_RESOURCE_ID \
    --http-method POST \
    --status-code 200 \
    --response-parameters '{
        "method.response.header.Access-Control-Allow-Origin": false
    }' \
    --region $REGION

aws apigateway put-integration-response \
    --rest-api-id $API_ID \
    --resource-id $REGISTER_RESOURCE_ID \
    --http-method POST \
    --status-code 200 \
    --response-parameters '{
        "method.response.header.Access-Control-Allow-Origin": "'"'"'*'"'"'"
    }' \
    --region $REGION

# Add CORS headers to POST /auth/login
aws apigateway put-method-response \
    --rest-api-id $API_ID \
    --resource-id $LOGIN_RESOURCE_ID \
    --http-method POST \
    --status-code 200 \
    --response-parameters '{
        "method.response.header.Access-Control-Allow-Origin": false
    }' \
    --region $REGION

aws apigateway put-integration-response \
    --rest-api-id $API_ID \
    --resource-id $LOGIN_RESOURCE_ID \
    --http-method POST \
    --status-code 200 \
    --response-parameters '{
        "method.response.header.Access-Control-Allow-Origin": "'"'"'*'"'"'"
    }' \
    --region $REGION

echo "‚úÖ CORS headers added to POST methods"

# ============= Deploy the API =============
echo "üöÄ Deploying API with complete CORS configuration..."

DEPLOYMENT_ID=$(aws apigateway create-deployment \
    --rest-api-id $API_ID \
    --stage-name dev \
    --stage-description "Development stage with complete CORS" \
    --description "Complete CORS configuration for all authentication endpoints" \
    --region $REGION \
    --query 'id' \
    --output text)

if [ $? -eq 0 ]; then
    echo "‚úÖ API deployed successfully: $DEPLOYMENT_ID"
else
    echo "‚ùå API deployment failed"
    exit 1
fi

# ============= Get API URL =============
API_URL="https://${API_ID}.execute-api.${REGION}.amazonaws.com/dev"

echo ""
echo "üéâ Complete CORS Configuration Applied!"
echo ""
echo "üîó API Endpoints Ready:"
echo "‚Ä¢ Registration: POST $API_URL/auth/register"
echo "‚Ä¢ Login: POST $API_URL/auth/login"
echo ""
echo "üåê CORS Headers Configured:"
echo "‚Ä¢ OPTIONS methods: Full preflight support"
echo "‚Ä¢ POST methods: Access-Control-Allow-Origin: *"
echo ""
echo "üß™ Test CORS preflight:"
echo "curl -X OPTIONS $API_URL/auth/register -H 'Origin: https://localhost:3000' -H 'Access-Control-Request-Method: POST' -v"
echo ""
echo "üß™ Test registration:"
echo "curl -X POST $API_URL/auth/register \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{\"email\":\"test@medisecure.qa\",\"password\":\"SecurePass123!\",\"firstName\":\"Ahmed\",\"lastName\":\"Al-Rashid\"}' -v"
